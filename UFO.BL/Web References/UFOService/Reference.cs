//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace UFO.BL.UFOService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UFOSoap", Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class UFO : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePdfScheduleForSpectacleDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVenueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtistByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtistsForCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanesForSpetacleDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpectacleDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpectacleDayTimeSlotsForSpectacleDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimeSlotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVenuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVenuesForAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePerformancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVenueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformancesForArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimeSlotForPerformanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimeSlotsForPerformancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtistsForPerformancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVenuesForPerformancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpectacleDaysForPerformancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpectacledayTimeSlotsForPerformancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformancesForVenueOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UFO() {
            this.Url = global::UFO.BL.Properties.Settings.Default.UFO_BL_UFO_UFO;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateArtistCompletedEventHandler CreateArtistCompleted;
        
        /// <remarks/>
        public event CreatePdfScheduleForSpectacleDayCompletedEventHandler CreatePdfScheduleForSpectacleDayCompleted;
        
        /// <remarks/>
        public event CreateVenueCompletedEventHandler CreateVenueCompleted;
        
        /// <remarks/>
        public event DeleteArtistCompletedEventHandler DeleteArtistCompleted;
        
        /// <remarks/>
        public event GetAreasCompletedEventHandler GetAreasCompleted;
        
        /// <remarks/>
        public event GetArtistByIdCompletedEventHandler GetArtistByIdCompleted;
        
        /// <remarks/>
        public event GetArtistsCompletedEventHandler GetArtistsCompleted;
        
        /// <remarks/>
        public event GetArtistsForCategoryCompletedEventHandler GetArtistsForCategoryCompleted;
        
        /// <remarks/>
        public event GetCategoriesCompletedEventHandler GetCategoriesCompleted;
        
        /// <remarks/>
        public event GetCategoryByIdCompletedEventHandler GetCategoryByIdCompleted;
        
        /// <remarks/>
        public event GetCountriesCompletedEventHandler GetCountriesCompleted;
        
        /// <remarks/>
        public event GetCountryByIdCompletedEventHandler GetCountryByIdCompleted;
        
        /// <remarks/>
        public event GetPerformanesForSpetacleDayCompletedEventHandler GetPerformanesForSpetacleDayCompleted;
        
        /// <remarks/>
        public event GetSpectacleDaysCompletedEventHandler GetSpectacleDaysCompleted;
        
        /// <remarks/>
        public event GetSpectacleDayTimeSlotsForSpectacleDayCompletedEventHandler GetSpectacleDayTimeSlotsForSpectacleDayCompleted;
        
        /// <remarks/>
        public event GetTimeSlotsCompletedEventHandler GetTimeSlotsCompleted;
        
        /// <remarks/>
        public event GetVenuesCompletedEventHandler GetVenuesCompleted;
        
        /// <remarks/>
        public event GetVenuesForAreaCompletedEventHandler GetVenuesForAreaCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event UpdateArtistCompletedEventHandler UpdateArtistCompleted;
        
        /// <remarks/>
        public event UpdatePerformancesCompletedEventHandler UpdatePerformancesCompleted;
        
        /// <remarks/>
        public event UpdateVenueCompletedEventHandler UpdateVenueCompleted;
        
        /// <remarks/>
        public event GetPerformancesForArtistCompletedEventHandler GetPerformancesForArtistCompleted;
        
        /// <remarks/>
        public event GetTimeSlotForPerformanceCompletedEventHandler GetTimeSlotForPerformanceCompleted;
        
        /// <remarks/>
        public event GetTimeSlotsForPerformancesCompletedEventHandler GetTimeSlotsForPerformancesCompleted;
        
        /// <remarks/>
        public event GetArtistsForPerformancesCompletedEventHandler GetArtistsForPerformancesCompleted;
        
        /// <remarks/>
        public event GetVenuesForPerformancesCompletedEventHandler GetVenuesForPerformancesCompleted;
        
        /// <remarks/>
        public event GetSpectacleDaysForPerformancesCompletedEventHandler GetSpectacleDaysForPerformancesCompleted;
        
        /// <remarks/>
        public event GetSpectacledayTimeSlotsForPerformancesCompletedEventHandler GetSpectacledayTimeSlotsForPerformancesCompleted;
        
        /// <remarks/>
        public event GetPerformancesForVenueCompletedEventHandler GetPerformancesForVenueCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/CreateArtist", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Artist CreateArtist(Artist artist) {
            object[] results = this.Invoke("CreateArtist", new object[] {
                        artist});
            return ((Artist)(results[0]));
        }
        
        /// <remarks/>
        public void CreateArtistAsync(Artist artist) {
            this.CreateArtistAsync(artist, null);
        }
        
        /// <remarks/>
        public void CreateArtistAsync(Artist artist, object userState) {
            if ((this.CreateArtistOperationCompleted == null)) {
                this.CreateArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateArtistOperationCompleted);
            }
            this.InvokeAsync("CreateArtist", new object[] {
                        artist}, this.CreateArtistOperationCompleted, userState);
        }
        
        private void OnCreateArtistOperationCompleted(object arg) {
            if ((this.CreateArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateArtistCompleted(this, new CreateArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/CreatePdfScheduleForSpectacleDay", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreatePdfScheduleForSpectacleDay(Spectacleday spectacleDay) {
            this.Invoke("CreatePdfScheduleForSpectacleDay", new object[] {
                        spectacleDay});
        }
        
        /// <remarks/>
        public void CreatePdfScheduleForSpectacleDayAsync(Spectacleday spectacleDay) {
            this.CreatePdfScheduleForSpectacleDayAsync(spectacleDay, null);
        }
        
        /// <remarks/>
        public void CreatePdfScheduleForSpectacleDayAsync(Spectacleday spectacleDay, object userState) {
            if ((this.CreatePdfScheduleForSpectacleDayOperationCompleted == null)) {
                this.CreatePdfScheduleForSpectacleDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePdfScheduleForSpectacleDayOperationCompleted);
            }
            this.InvokeAsync("CreatePdfScheduleForSpectacleDay", new object[] {
                        spectacleDay}, this.CreatePdfScheduleForSpectacleDayOperationCompleted, userState);
        }
        
        private void OnCreatePdfScheduleForSpectacleDayOperationCompleted(object arg) {
            if ((this.CreatePdfScheduleForSpectacleDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePdfScheduleForSpectacleDayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/CreateVenue", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Venue CreateVenue(Venue venue) {
            object[] results = this.Invoke("CreateVenue", new object[] {
                        venue});
            return ((Venue)(results[0]));
        }
        
        /// <remarks/>
        public void CreateVenueAsync(Venue venue) {
            this.CreateVenueAsync(venue, null);
        }
        
        /// <remarks/>
        public void CreateVenueAsync(Venue venue, object userState) {
            if ((this.CreateVenueOperationCompleted == null)) {
                this.CreateVenueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVenueOperationCompleted);
            }
            this.InvokeAsync("CreateVenue", new object[] {
                        venue}, this.CreateVenueOperationCompleted, userState);
        }
        
        private void OnCreateVenueOperationCompleted(object arg) {
            if ((this.CreateVenueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVenueCompleted(this, new CreateVenueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/DeleteArtist", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteArtist(Artist artist) {
            this.Invoke("DeleteArtist", new object[] {
                        artist});
        }
        
        /// <remarks/>
        public void DeleteArtistAsync(Artist artist) {
            this.DeleteArtistAsync(artist, null);
        }
        
        /// <remarks/>
        public void DeleteArtistAsync(Artist artist, object userState) {
            if ((this.DeleteArtistOperationCompleted == null)) {
                this.DeleteArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteArtistOperationCompleted);
            }
            this.InvokeAsync("DeleteArtist", new object[] {
                        artist}, this.DeleteArtistOperationCompleted, userState);
        }
        
        private void OnDeleteArtistOperationCompleted(object arg) {
            if ((this.DeleteArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteArtistCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetAreas", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Area[] GetAreas() {
            object[] results = this.Invoke("GetAreas", new object[0]);
            return ((Area[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAreasAsync() {
            this.GetAreasAsync(null);
        }
        
        /// <remarks/>
        public void GetAreasAsync(object userState) {
            if ((this.GetAreasOperationCompleted == null)) {
                this.GetAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAreasOperationCompleted);
            }
            this.InvokeAsync("GetAreas", new object[0], this.GetAreasOperationCompleted, userState);
        }
        
        private void OnGetAreasOperationCompleted(object arg) {
            if ((this.GetAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAreasCompleted(this, new GetAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetArtistById", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Artist GetArtistById(Artist artist) {
            object[] results = this.Invoke("GetArtistById", new object[] {
                        artist});
            return ((Artist)(results[0]));
        }
        
        /// <remarks/>
        public void GetArtistByIdAsync(Artist artist) {
            this.GetArtistByIdAsync(artist, null);
        }
        
        /// <remarks/>
        public void GetArtistByIdAsync(Artist artist, object userState) {
            if ((this.GetArtistByIdOperationCompleted == null)) {
                this.GetArtistByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtistByIdOperationCompleted);
            }
            this.InvokeAsync("GetArtistById", new object[] {
                        artist}, this.GetArtistByIdOperationCompleted, userState);
        }
        
        private void OnGetArtistByIdOperationCompleted(object arg) {
            if ((this.GetArtistByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtistByIdCompleted(this, new GetArtistByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetArtists", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Artist[] GetArtists() {
            object[] results = this.Invoke("GetArtists", new object[0]);
            return ((Artist[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArtistsAsync() {
            this.GetArtistsAsync(null);
        }
        
        /// <remarks/>
        public void GetArtistsAsync(object userState) {
            if ((this.GetArtistsOperationCompleted == null)) {
                this.GetArtistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtistsOperationCompleted);
            }
            this.InvokeAsync("GetArtists", new object[0], this.GetArtistsOperationCompleted, userState);
        }
        
        private void OnGetArtistsOperationCompleted(object arg) {
            if ((this.GetArtistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtistsCompleted(this, new GetArtistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetArtistsForCategory", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Artist[] GetArtistsForCategory(Category category) {
            object[] results = this.Invoke("GetArtistsForCategory", new object[] {
                        category});
            return ((Artist[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArtistsForCategoryAsync(Category category) {
            this.GetArtistsForCategoryAsync(category, null);
        }
        
        /// <remarks/>
        public void GetArtistsForCategoryAsync(Category category, object userState) {
            if ((this.GetArtistsForCategoryOperationCompleted == null)) {
                this.GetArtistsForCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtistsForCategoryOperationCompleted);
            }
            this.InvokeAsync("GetArtistsForCategory", new object[] {
                        category}, this.GetArtistsForCategoryOperationCompleted, userState);
        }
        
        private void OnGetArtistsForCategoryOperationCompleted(object arg) {
            if ((this.GetArtistsForCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtistsForCategoryCompleted(this, new GetArtistsForCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetCategories", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Category[] GetCategories() {
            object[] results = this.Invoke("GetCategories", new object[0]);
            return ((Category[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesAsync() {
            this.GetCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetCategoriesAsync(object userState) {
            if ((this.GetCategoriesOperationCompleted == null)) {
                this.GetCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetCategories", new object[0], this.GetCategoriesOperationCompleted, userState);
        }
        
        private void OnGetCategoriesOperationCompleted(object arg) {
            if ((this.GetCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesCompleted(this, new GetCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetCategoryById", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Category GetCategoryById(Category category) {
            object[] results = this.Invoke("GetCategoryById", new object[] {
                        category});
            return ((Category)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryByIdAsync(Category category) {
            this.GetCategoryByIdAsync(category, null);
        }
        
        /// <remarks/>
        public void GetCategoryByIdAsync(Category category, object userState) {
            if ((this.GetCategoryByIdOperationCompleted == null)) {
                this.GetCategoryByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryByIdOperationCompleted);
            }
            this.InvokeAsync("GetCategoryById", new object[] {
                        category}, this.GetCategoryByIdOperationCompleted, userState);
        }
        
        private void OnGetCategoryByIdOperationCompleted(object arg) {
            if ((this.GetCategoryByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryByIdCompleted(this, new GetCategoryByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetCountries", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Country[] GetCountries() {
            object[] results = this.Invoke("GetCountries", new object[0]);
            return ((Country[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCountriesAsync() {
            this.GetCountriesAsync(null);
        }
        
        /// <remarks/>
        public void GetCountriesAsync(object userState) {
            if ((this.GetCountriesOperationCompleted == null)) {
                this.GetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesOperationCompleted);
            }
            this.InvokeAsync("GetCountries", new object[0], this.GetCountriesOperationCompleted, userState);
        }
        
        private void OnGetCountriesOperationCompleted(object arg) {
            if ((this.GetCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountriesCompleted(this, new GetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetCountryById", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Country GetCountryById(Country country) {
            object[] results = this.Invoke("GetCountryById", new object[] {
                        country});
            return ((Country)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryByIdAsync(Country country) {
            this.GetCountryByIdAsync(country, null);
        }
        
        /// <remarks/>
        public void GetCountryByIdAsync(Country country, object userState) {
            if ((this.GetCountryByIdOperationCompleted == null)) {
                this.GetCountryByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryByIdOperationCompleted);
            }
            this.InvokeAsync("GetCountryById", new object[] {
                        country}, this.GetCountryByIdOperationCompleted, userState);
        }
        
        private void OnGetCountryByIdOperationCompleted(object arg) {
            if ((this.GetCountryByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryByIdCompleted(this, new GetCountryByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetPerformanesForSpetacleDay", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Performance[] GetPerformanesForSpetacleDay(Spectacleday day) {
            object[] results = this.Invoke("GetPerformanesForSpetacleDay", new object[] {
                        day});
            return ((Performance[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanesForSpetacleDayAsync(Spectacleday day) {
            this.GetPerformanesForSpetacleDayAsync(day, null);
        }
        
        /// <remarks/>
        public void GetPerformanesForSpetacleDayAsync(Spectacleday day, object userState) {
            if ((this.GetPerformanesForSpetacleDayOperationCompleted == null)) {
                this.GetPerformanesForSpetacleDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanesForSpetacleDayOperationCompleted);
            }
            this.InvokeAsync("GetPerformanesForSpetacleDay", new object[] {
                        day}, this.GetPerformanesForSpetacleDayOperationCompleted, userState);
        }
        
        private void OnGetPerformanesForSpetacleDayOperationCompleted(object arg) {
            if ((this.GetPerformanesForSpetacleDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanesForSpetacleDayCompleted(this, new GetPerformanesForSpetacleDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetSpectacleDays", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Spectacleday[] GetSpectacleDays() {
            object[] results = this.Invoke("GetSpectacleDays", new object[0]);
            return ((Spectacleday[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpectacleDaysAsync() {
            this.GetSpectacleDaysAsync(null);
        }
        
        /// <remarks/>
        public void GetSpectacleDaysAsync(object userState) {
            if ((this.GetSpectacleDaysOperationCompleted == null)) {
                this.GetSpectacleDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpectacleDaysOperationCompleted);
            }
            this.InvokeAsync("GetSpectacleDays", new object[0], this.GetSpectacleDaysOperationCompleted, userState);
        }
        
        private void OnGetSpectacleDaysOperationCompleted(object arg) {
            if ((this.GetSpectacleDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpectacleDaysCompleted(this, new GetSpectacleDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetSpectacleDayTimeSlotsForSpectacleDay", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpectacledayTimeSlot[] GetSpectacleDayTimeSlotsForSpectacleDay(Spectacleday day) {
            object[] results = this.Invoke("GetSpectacleDayTimeSlotsForSpectacleDay", new object[] {
                        day});
            return ((SpectacledayTimeSlot[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpectacleDayTimeSlotsForSpectacleDayAsync(Spectacleday day) {
            this.GetSpectacleDayTimeSlotsForSpectacleDayAsync(day, null);
        }
        
        /// <remarks/>
        public void GetSpectacleDayTimeSlotsForSpectacleDayAsync(Spectacleday day, object userState) {
            if ((this.GetSpectacleDayTimeSlotsForSpectacleDayOperationCompleted == null)) {
                this.GetSpectacleDayTimeSlotsForSpectacleDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpectacleDayTimeSlotsForSpectacleDayOperationCompleted);
            }
            this.InvokeAsync("GetSpectacleDayTimeSlotsForSpectacleDay", new object[] {
                        day}, this.GetSpectacleDayTimeSlotsForSpectacleDayOperationCompleted, userState);
        }
        
        private void OnGetSpectacleDayTimeSlotsForSpectacleDayOperationCompleted(object arg) {
            if ((this.GetSpectacleDayTimeSlotsForSpectacleDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpectacleDayTimeSlotsForSpectacleDayCompleted(this, new GetSpectacleDayTimeSlotsForSpectacleDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetTimeSlots", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimeSlot[] GetTimeSlots() {
            object[] results = this.Invoke("GetTimeSlots", new object[0]);
            return ((TimeSlot[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTimeSlotsAsync() {
            this.GetTimeSlotsAsync(null);
        }
        
        /// <remarks/>
        public void GetTimeSlotsAsync(object userState) {
            if ((this.GetTimeSlotsOperationCompleted == null)) {
                this.GetTimeSlotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeSlotsOperationCompleted);
            }
            this.InvokeAsync("GetTimeSlots", new object[0], this.GetTimeSlotsOperationCompleted, userState);
        }
        
        private void OnGetTimeSlotsOperationCompleted(object arg) {
            if ((this.GetTimeSlotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeSlotsCompleted(this, new GetTimeSlotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetVenues", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Venue[] GetVenues() {
            object[] results = this.Invoke("GetVenues", new object[0]);
            return ((Venue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVenuesAsync() {
            this.GetVenuesAsync(null);
        }
        
        /// <remarks/>
        public void GetVenuesAsync(object userState) {
            if ((this.GetVenuesOperationCompleted == null)) {
                this.GetVenuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVenuesOperationCompleted);
            }
            this.InvokeAsync("GetVenues", new object[0], this.GetVenuesOperationCompleted, userState);
        }
        
        private void OnGetVenuesOperationCompleted(object arg) {
            if ((this.GetVenuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVenuesCompleted(this, new GetVenuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetVenuesForArea", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Venue[] GetVenuesForArea(Area area) {
            object[] results = this.Invoke("GetVenuesForArea", new object[] {
                        area});
            return ((Venue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVenuesForAreaAsync(Area area) {
            this.GetVenuesForAreaAsync(area, null);
        }
        
        /// <remarks/>
        public void GetVenuesForAreaAsync(Area area, object userState) {
            if ((this.GetVenuesForAreaOperationCompleted == null)) {
                this.GetVenuesForAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVenuesForAreaOperationCompleted);
            }
            this.InvokeAsync("GetVenuesForArea", new object[] {
                        area}, this.GetVenuesForAreaOperationCompleted, userState);
        }
        
        private void OnGetVenuesForAreaOperationCompleted(object arg) {
            if ((this.GetVenuesForAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVenuesForAreaCompleted(this, new GetVenuesForAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/Login", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(string username, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/UpdateArtist", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Artist UpdateArtist(Artist artist) {
            object[] results = this.Invoke("UpdateArtist", new object[] {
                        artist});
            return ((Artist)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateArtistAsync(Artist artist) {
            this.UpdateArtistAsync(artist, null);
        }
        
        /// <remarks/>
        public void UpdateArtistAsync(Artist artist, object userState) {
            if ((this.UpdateArtistOperationCompleted == null)) {
                this.UpdateArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArtistOperationCompleted);
            }
            this.InvokeAsync("UpdateArtist", new object[] {
                        artist}, this.UpdateArtistOperationCompleted, userState);
        }
        
        private void OnUpdateArtistOperationCompleted(object arg) {
            if ((this.UpdateArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArtistCompleted(this, new UpdateArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/UpdatePerformances", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePerformances(Spectacleday spectacleDay, Performance[] performances) {
            this.Invoke("UpdatePerformances", new object[] {
                        spectacleDay,
                        performances});
        }
        
        /// <remarks/>
        public void UpdatePerformancesAsync(Spectacleday spectacleDay, Performance[] performances) {
            this.UpdatePerformancesAsync(spectacleDay, performances, null);
        }
        
        /// <remarks/>
        public void UpdatePerformancesAsync(Spectacleday spectacleDay, Performance[] performances, object userState) {
            if ((this.UpdatePerformancesOperationCompleted == null)) {
                this.UpdatePerformancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePerformancesOperationCompleted);
            }
            this.InvokeAsync("UpdatePerformances", new object[] {
                        spectacleDay,
                        performances}, this.UpdatePerformancesOperationCompleted, userState);
        }
        
        private void OnUpdatePerformancesOperationCompleted(object arg) {
            if ((this.UpdatePerformancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePerformancesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/UpdateVenue", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Venue UpdateVenue(Venue venue) {
            object[] results = this.Invoke("UpdateVenue", new object[] {
                        venue});
            return ((Venue)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVenueAsync(Venue venue) {
            this.UpdateVenueAsync(venue, null);
        }
        
        /// <remarks/>
        public void UpdateVenueAsync(Venue venue, object userState) {
            if ((this.UpdateVenueOperationCompleted == null)) {
                this.UpdateVenueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVenueOperationCompleted);
            }
            this.InvokeAsync("UpdateVenue", new object[] {
                        venue}, this.UpdateVenueOperationCompleted, userState);
        }
        
        private void OnUpdateVenueOperationCompleted(object arg) {
            if ((this.UpdateVenueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVenueCompleted(this, new UpdateVenueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetPerformancesForArtist", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Performance[] GetPerformancesForArtist(Artist artist) {
            object[] results = this.Invoke("GetPerformancesForArtist", new object[] {
                        artist});
            return ((Performance[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformancesForArtistAsync(Artist artist) {
            this.GetPerformancesForArtistAsync(artist, null);
        }
        
        /// <remarks/>
        public void GetPerformancesForArtistAsync(Artist artist, object userState) {
            if ((this.GetPerformancesForArtistOperationCompleted == null)) {
                this.GetPerformancesForArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformancesForArtistOperationCompleted);
            }
            this.InvokeAsync("GetPerformancesForArtist", new object[] {
                        artist}, this.GetPerformancesForArtistOperationCompleted, userState);
        }
        
        private void OnGetPerformancesForArtistOperationCompleted(object arg) {
            if ((this.GetPerformancesForArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformancesForArtistCompleted(this, new GetPerformancesForArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetTimeSlotForPerformance", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimeSlot GetTimeSlotForPerformance(Performance performance) {
            object[] results = this.Invoke("GetTimeSlotForPerformance", new object[] {
                        performance});
            return ((TimeSlot)(results[0]));
        }
        
        /// <remarks/>
        public void GetTimeSlotForPerformanceAsync(Performance performance) {
            this.GetTimeSlotForPerformanceAsync(performance, null);
        }
        
        /// <remarks/>
        public void GetTimeSlotForPerformanceAsync(Performance performance, object userState) {
            if ((this.GetTimeSlotForPerformanceOperationCompleted == null)) {
                this.GetTimeSlotForPerformanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeSlotForPerformanceOperationCompleted);
            }
            this.InvokeAsync("GetTimeSlotForPerformance", new object[] {
                        performance}, this.GetTimeSlotForPerformanceOperationCompleted, userState);
        }
        
        private void OnGetTimeSlotForPerformanceOperationCompleted(object arg) {
            if ((this.GetTimeSlotForPerformanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeSlotForPerformanceCompleted(this, new GetTimeSlotForPerformanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetTimeSlotsForPerformances", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimeSlot[] GetTimeSlotsForPerformances(Performance[] performances) {
            object[] results = this.Invoke("GetTimeSlotsForPerformances", new object[] {
                        performances});
            return ((TimeSlot[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTimeSlotsForPerformancesAsync(Performance[] performances) {
            this.GetTimeSlotsForPerformancesAsync(performances, null);
        }
        
        /// <remarks/>
        public void GetTimeSlotsForPerformancesAsync(Performance[] performances, object userState) {
            if ((this.GetTimeSlotsForPerformancesOperationCompleted == null)) {
                this.GetTimeSlotsForPerformancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeSlotsForPerformancesOperationCompleted);
            }
            this.InvokeAsync("GetTimeSlotsForPerformances", new object[] {
                        performances}, this.GetTimeSlotsForPerformancesOperationCompleted, userState);
        }
        
        private void OnGetTimeSlotsForPerformancesOperationCompleted(object arg) {
            if ((this.GetTimeSlotsForPerformancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeSlotsForPerformancesCompleted(this, new GetTimeSlotsForPerformancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetArtistsForPerformances", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Artist[] GetArtistsForPerformances(Performance[] performances) {
            object[] results = this.Invoke("GetArtistsForPerformances", new object[] {
                        performances});
            return ((Artist[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArtistsForPerformancesAsync(Performance[] performances) {
            this.GetArtistsForPerformancesAsync(performances, null);
        }
        
        /// <remarks/>
        public void GetArtistsForPerformancesAsync(Performance[] performances, object userState) {
            if ((this.GetArtistsForPerformancesOperationCompleted == null)) {
                this.GetArtistsForPerformancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtistsForPerformancesOperationCompleted);
            }
            this.InvokeAsync("GetArtistsForPerformances", new object[] {
                        performances}, this.GetArtistsForPerformancesOperationCompleted, userState);
        }
        
        private void OnGetArtistsForPerformancesOperationCompleted(object arg) {
            if ((this.GetArtistsForPerformancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtistsForPerformancesCompleted(this, new GetArtistsForPerformancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetVenuesForPerformances", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Venue[] GetVenuesForPerformances(Performance[] performances) {
            object[] results = this.Invoke("GetVenuesForPerformances", new object[] {
                        performances});
            return ((Venue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVenuesForPerformancesAsync(Performance[] performances) {
            this.GetVenuesForPerformancesAsync(performances, null);
        }
        
        /// <remarks/>
        public void GetVenuesForPerformancesAsync(Performance[] performances, object userState) {
            if ((this.GetVenuesForPerformancesOperationCompleted == null)) {
                this.GetVenuesForPerformancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVenuesForPerformancesOperationCompleted);
            }
            this.InvokeAsync("GetVenuesForPerformances", new object[] {
                        performances}, this.GetVenuesForPerformancesOperationCompleted, userState);
        }
        
        private void OnGetVenuesForPerformancesOperationCompleted(object arg) {
            if ((this.GetVenuesForPerformancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVenuesForPerformancesCompleted(this, new GetVenuesForPerformancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetSpectacleDaysForPerformances", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Spectacleday[] GetSpectacleDaysForPerformances(Performance[] performances) {
            object[] results = this.Invoke("GetSpectacleDaysForPerformances", new object[] {
                        performances});
            return ((Spectacleday[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpectacleDaysForPerformancesAsync(Performance[] performances) {
            this.GetSpectacleDaysForPerformancesAsync(performances, null);
        }
        
        /// <remarks/>
        public void GetSpectacleDaysForPerformancesAsync(Performance[] performances, object userState) {
            if ((this.GetSpectacleDaysForPerformancesOperationCompleted == null)) {
                this.GetSpectacleDaysForPerformancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpectacleDaysForPerformancesOperationCompleted);
            }
            this.InvokeAsync("GetSpectacleDaysForPerformances", new object[] {
                        performances}, this.GetSpectacleDaysForPerformancesOperationCompleted, userState);
        }
        
        private void OnGetSpectacleDaysForPerformancesOperationCompleted(object arg) {
            if ((this.GetSpectacleDaysForPerformancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpectacleDaysForPerformancesCompleted(this, new GetSpectacleDaysForPerformancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetSpectacledayTimeSlotsForPerformances", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpectacledayTimeSlot[] GetSpectacledayTimeSlotsForPerformances(Performance[] performances) {
            object[] results = this.Invoke("GetSpectacledayTimeSlotsForPerformances", new object[] {
                        performances});
            return ((SpectacledayTimeSlot[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpectacledayTimeSlotsForPerformancesAsync(Performance[] performances) {
            this.GetSpectacledayTimeSlotsForPerformancesAsync(performances, null);
        }
        
        /// <remarks/>
        public void GetSpectacledayTimeSlotsForPerformancesAsync(Performance[] performances, object userState) {
            if ((this.GetSpectacledayTimeSlotsForPerformancesOperationCompleted == null)) {
                this.GetSpectacledayTimeSlotsForPerformancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpectacledayTimeSlotsForPerformancesOperationCompleted);
            }
            this.InvokeAsync("GetSpectacledayTimeSlotsForPerformances", new object[] {
                        performances}, this.GetSpectacledayTimeSlotsForPerformancesOperationCompleted, userState);
        }
        
        private void OnGetSpectacledayTimeSlotsForPerformancesOperationCompleted(object arg) {
            if ((this.GetSpectacledayTimeSlotsForPerformancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpectacledayTimeSlotsForPerformancesCompleted(this, new GetSpectacledayTimeSlotsForPerformancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ufo.fh-hagenberg.at/GetPerformancesForVenue", RequestNamespace="http://ufo.fh-hagenberg.at/", ResponseNamespace="http://ufo.fh-hagenberg.at/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Performance[] GetPerformancesForVenue(Venue venue) {
            object[] results = this.Invoke("GetPerformancesForVenue", new object[] {
                        venue});
            return ((Performance[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformancesForVenueAsync(Venue venue) {
            this.GetPerformancesForVenueAsync(venue, null);
        }
        
        /// <remarks/>
        public void GetPerformancesForVenueAsync(Venue venue, object userState) {
            if ((this.GetPerformancesForVenueOperationCompleted == null)) {
                this.GetPerformancesForVenueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformancesForVenueOperationCompleted);
            }
            this.InvokeAsync("GetPerformancesForVenue", new object[] {
                        venue}, this.GetPerformancesForVenueOperationCompleted, userState);
        }
        
        private void OnGetPerformancesForVenueOperationCompleted(object arg) {
            if ((this.GetPerformancesForVenueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformancesForVenueCompleted(this, new GetPerformancesForVenueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class Artist {
        
        private int idField;
        
        private string nameField;
        
        private string imageField;
        
        private string videoField;
        
        private int categoryIdField;
        
        private int countryIdField;
        
        private string emailField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string Video {
            get {
                return this.videoField;
            }
            set {
                this.videoField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        public int CountryId {
            get {
                return this.countryIdField;
            }
            set {
                this.countryIdField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class TimeSlot {
        
        private int idField;
        
        private int startField;
        
        private int endField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public int End {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class SpectacledayTimeSlot {
        
        private int idField;
        
        private int timeSlotIdField;
        
        private int spectacledayIdField;
        
        private TimeSlot timeSlotField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int TimeSlotId {
            get {
                return this.timeSlotIdField;
            }
            set {
                this.timeSlotIdField = value;
            }
        }
        
        /// <remarks/>
        public int SpectacledayId {
            get {
                return this.spectacledayIdField;
            }
            set {
                this.spectacledayIdField = value;
            }
        }
        
        /// <remarks/>
        public TimeSlot TimeSlot {
            get {
                return this.timeSlotField;
            }
            set {
                this.timeSlotField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class Performance {
        
        private int idField;
        
        private int spectacledayTimeSlotField;
        
        private int artistIdField;
        
        private int venueIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int SpectacledayTimeSlot {
            get {
                return this.spectacledayTimeSlotField;
            }
            set {
                this.spectacledayTimeSlotField = value;
            }
        }
        
        /// <remarks/>
        public int ArtistId {
            get {
                return this.artistIdField;
            }
            set {
                this.artistIdField = value;
            }
        }
        
        /// <remarks/>
        public int VenueId {
            get {
                return this.venueIdField;
            }
            set {
                this.venueIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class Country {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class Category {
        
        private int idField;
        
        private string descriptionField;
        
        private string colorField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class Area {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class Venue {
        
        private int idField;
        
        private int areaIdField;
        
        private string descriptionField;
        
        private string shortDescriptionField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int AreaId {
            get {
                return this.areaIdField;
            }
            set {
                this.areaIdField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ShortDescription {
            get {
                return this.shortDescriptionField;
            }
            set {
                this.shortDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ufo.fh-hagenberg.at/")]
    public partial class Spectacleday {
        
        private int idField;
        
        private System.DateTime dayField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CreateArtistCompletedEventHandler(object sender, CreateArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Artist Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Artist)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CreatePdfScheduleForSpectacleDayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CreateVenueCompletedEventHandler(object sender, CreateVenueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateVenueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateVenueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Venue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Venue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DeleteArtistCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAreasCompletedEventHandler(object sender, GetAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Area[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Area[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArtistByIdCompletedEventHandler(object sender, GetArtistByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtistByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtistByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Artist Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Artist)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArtistsCompletedEventHandler(object sender, GetArtistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Artist[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Artist[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArtistsForCategoryCompletedEventHandler(object sender, GetArtistsForCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtistsForCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtistsForCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Artist[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Artist[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCategoriesCompletedEventHandler(object sender, GetCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Category[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Category[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCategoryByIdCompletedEventHandler(object sender, GetCategoryByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Category Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Category)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCountriesCompletedEventHandler(object sender, GetCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Country[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Country[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCountryByIdCompletedEventHandler(object sender, GetCountryByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Country Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Country)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPerformanesForSpetacleDayCompletedEventHandler(object sender, GetPerformanesForSpetacleDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanesForSpetacleDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanesForSpetacleDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Performance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Performance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSpectacleDaysCompletedEventHandler(object sender, GetSpectacleDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpectacleDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpectacleDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Spectacleday[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Spectacleday[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSpectacleDayTimeSlotsForSpectacleDayCompletedEventHandler(object sender, GetSpectacleDayTimeSlotsForSpectacleDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpectacleDayTimeSlotsForSpectacleDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpectacleDayTimeSlotsForSpectacleDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpectacledayTimeSlot[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpectacledayTimeSlot[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetTimeSlotsCompletedEventHandler(object sender, GetTimeSlotsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeSlotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeSlotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimeSlot[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimeSlot[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetVenuesCompletedEventHandler(object sender, GetVenuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVenuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVenuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Venue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Venue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetVenuesForAreaCompletedEventHandler(object sender, GetVenuesForAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVenuesForAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVenuesForAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Venue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Venue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateArtistCompletedEventHandler(object sender, UpdateArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Artist Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Artist)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdatePerformancesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateVenueCompletedEventHandler(object sender, UpdateVenueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVenueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVenueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Venue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Venue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPerformancesForArtistCompletedEventHandler(object sender, GetPerformancesForArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformancesForArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformancesForArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Performance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Performance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetTimeSlotForPerformanceCompletedEventHandler(object sender, GetTimeSlotForPerformanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeSlotForPerformanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeSlotForPerformanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimeSlot Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimeSlot)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetTimeSlotsForPerformancesCompletedEventHandler(object sender, GetTimeSlotsForPerformancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeSlotsForPerformancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeSlotsForPerformancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimeSlot[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimeSlot[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArtistsForPerformancesCompletedEventHandler(object sender, GetArtistsForPerformancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtistsForPerformancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtistsForPerformancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Artist[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Artist[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetVenuesForPerformancesCompletedEventHandler(object sender, GetVenuesForPerformancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVenuesForPerformancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVenuesForPerformancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Venue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Venue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSpectacleDaysForPerformancesCompletedEventHandler(object sender, GetSpectacleDaysForPerformancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpectacleDaysForPerformancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpectacleDaysForPerformancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Spectacleday[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Spectacleday[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSpectacledayTimeSlotsForPerformancesCompletedEventHandler(object sender, GetSpectacledayTimeSlotsForPerformancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpectacledayTimeSlotsForPerformancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpectacledayTimeSlotsForPerformancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpectacledayTimeSlot[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpectacledayTimeSlot[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPerformancesForVenueCompletedEventHandler(object sender, GetPerformancesForVenueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformancesForVenueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformancesForVenueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Performance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Performance[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591